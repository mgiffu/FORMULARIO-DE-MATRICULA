input, 
textarea, 
select {
  appearance: none; /* para retirar qualquer efeito padrão do navegador */
  width: 100%;
  border-radius: .5rem;
  border: 2px solid transparent; /* é um pequeno truque para que ao clicar nas caixas e o destaque aparecer, os elementos da pagina não se mexam levemente para baixo. Dessa forma não tem movimentação. Isso foi verificado no finalzinho da aula, depois do GitHub */
  outline: 1px solid var(--stroke-default);
  padding: .75rem 1rem;
  font: var(--text);
}

label {
  font: var(--text-sm);
  color: var(--text-secondary);
  display: block; /* serve para que todas as labels tenham o mesmo margin-bottom */
  margin-bottom: .25rem;
}

input:focus, /* focus é para inserir estilos quando o usuário clicar no campo */
select:focus,
textarea:focus,
input[type="date"]:focus-within { /* o [type="date"]:focus-within vai verificar se todos os elementos dentro do input do tipo date estão em foco*/
  outline: .25rem solid var(--surface-secondary); /* é a cor envolta da caixa */
  border: .125rem solid var(--stroke-highlight); /* é a cor da borda da caixa */
  outline-offset: .1px; /* para que a cor da borda da caixa apareca no navegador safari*/
}

input[type="date"] {
  position: relative; /* para que o elemento filho com "positon:abosolute" seja posicionado em relação ao elemento pai */
  &::-webkit-calendar-picker-indicator {
    opacity: 0; /* para esconder o calendário padrão do navegador */
  }

  &::before {
    content: ""; /* todo before precisa ter um content */
    position: absolute; /* esse é o elemento filho com o "positon:absolute" */
    background: url(../../assets/icons/calendar-03.svg) center/contain; /* para deixar o elemento com a imagem  do calendário que precisamos */
    right: 1rem;
    width: 1.25rem;
    height: 1.25rem;

    /* para alinhar o calendário ao meio quando está absoluta */
    top: 50%; /* vai dividir o espaço ao meio e o topo do calendário estará exatamento no meio, desta forma, ele ficara do meio para baixo */
    transform: translateY(-50%); /* para que o calendário vá exatamente para o meio */
  }
}

select {
  background: url(../../assets/icons/arrow-down-01.svg) no-repeat calc(100% - 1rem);
  /* o calc é uma função que serve para colocar a seta no canto direito, através do 100% e dar o espaço de 16px entre a seta e a borda, através do 1rem */
}

.address .flex { /* essa linha de comando se lê "quando tiver flex no address" */
  gap: 1.25rem;
}

.input-wrapper:has([disabled]) { /* essa linha de comando se lê "se dentro do input-wrapper algum atributo com  disable, então pegue ele e faça o que for informado nesse código" */
opacity: .5;
}

input {
  &[disabled] { /* essa linha de comando se lê "o input que tenha o atributo disable nele, então execute o código que será informado aqui" */
    background-color: var(--surface-disabled);
    border: 1px solid var(--stroke-default);
    color: var(--text-primary);
  }

  &:invalid { /* esse seletor verá quando o campo está invalidado, caso o campo esteja invalidado, devido ao riquired que foi colocado no html, ele apresentará as condições dentro desse código */
    border: 0.125rem solid var(--semantic-error);
  }

  & + small { /* essa linha de comando se lê "o input que tiver o small como irmão" */
    font: var(--text-sm);
    color: #78716C;
    display: inline-block; /* para inserir uma separação entre ele e a caixa, o block é quem gera essa caracteristica */
    margin-top: .25rem;
  }

  &[required] + .error { /* essa linha de comando se lê "o input que tiver um riquired e ao lado dele um error, aplique esse código no error" */
    display: flex;
    align-items: center;
    gap: .25rem;
    font: var(--text-sm);
    color: var(--semantic-error);
    margin-top: .25rem;
  }

  &:not(:focus):valid + .error { /* essa linha de comando se lê "quando o imput não estiver em foco e for valido a classe error, então aplique o código abaixo" */
    display: none;
  }
  
}